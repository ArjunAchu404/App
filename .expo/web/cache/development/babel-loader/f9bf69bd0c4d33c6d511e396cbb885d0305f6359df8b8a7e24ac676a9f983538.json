{"ast":null,"code":"import React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar HomeServ = function HomeServ() {\n  var agriculturalButtons = [{\n    label: 'Crop Management',\n    value: 'cropManagement'\n  }, {\n    label: 'Livestock Care',\n    value: 'livestockCare'\n  }, {\n    label: 'Soil Analysis',\n    value: 'soilAnalysis'\n  }, {\n    label: 'Irrigation',\n    value: 'irrigation'\n  }, {\n    label: 'Harvesting Tips',\n    value: 'harvestingTips'\n  }, {\n    label: 'Farm Equipment',\n    value: 'farmEquipment'\n  }, {\n    label: 'Pest Control',\n    value: 'pestControl'\n  }, {\n    label: 'Organic Farming',\n    value: 'organicFarming'\n  }, {\n    label: 'Marketplace',\n    value: 'marketplace'\n  }, {\n    label: 'Weather Forecast',\n    value: 'weatherForecast'\n  }];\n  var handleButtonPress = function handleButtonPress(item) {\n    console.log(`Button pressed: ${item.label}`);\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.text\n    }), _jsx(View, {\n      style: styles.buttonContainer,\n      children: agriculturalButtons.map(function (item) {\n        return _jsx(TouchableOpacity, {\n          style: styles.button,\n          onPress: function onPress() {\n            return handleButtonPress(item);\n          },\n          children: _jsx(Text, {\n            style: styles.buttonText,\n            children: item.label\n          })\n        }, item.value);\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  text: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    marginBottom: 20\n  },\n  buttonContainer: {\n    width: '80%',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  button: {\n    backgroundColor: '#6DB33F',\n    padding: 15,\n    marginVertical: 10,\n    width: '100%',\n    borderRadius: 8,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  buttonText: {\n    color: 'white',\n    fontSize: 16,\n    fontWeight: 'bold'\n  }\n});\nexport default HomeServ;","map":{"version":3,"names":["React","View","Text","StyleSheet","TouchableOpacity","jsx","_jsx","jsxs","_jsxs","HomeServ","agriculturalButtons","label","value","handleButtonPress","item","console","log","style","styles","container","children","text","buttonContainer","map","button","onPress","buttonText","create","flex","justifyContent","alignItems","fontSize","fontWeight","marginBottom","width","backgroundColor","padding","marginVertical","borderRadius","color"],"sources":["C:/Users/shiji/Documents/GitHub/App-original/src/Agric.js"],"sourcesContent":["// HomeServ.js\r\nimport React from 'react';\r\nimport { View, Text, StyleSheet, TouchableOpacity } from 'react-native';\r\n\r\nconst HomeServ = () => {\r\n  const agriculturalButtons = [\r\n    { label: 'Crop Management', value: 'cropManagement' },\r\n    { label: 'Livestock Care', value: 'livestockCare' },\r\n    { label: 'Soil Analysis', value: 'soilAnalysis' },\r\n    { label: 'Irrigation', value: 'irrigation' },\r\n    { label: 'Harvesting Tips', value: 'harvestingTips' },\r\n    { label: 'Farm Equipment', value: 'farmEquipment' },\r\n    { label: 'Pest Control', value: 'pestControl' },\r\n    { label: 'Organic Farming', value: 'organicFarming' },\r\n    { label: 'Marketplace', value: 'marketplace' },\r\n    { label: 'Weather Forecast', value: 'weatherForecast' },\r\n  ];\r\n\r\n  const handleButtonPress = (item) => {\r\n    // Handle button press based on the item value\r\n    console.log(`Button pressed: ${item.label}`);\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.text}></Text>\r\n\r\n      {/* Render agricultural theme buttons */}\r\n      <View style={styles.buttonContainer}>\r\n        {agriculturalButtons.map((item) => (\r\n          <TouchableOpacity\r\n            key={item.value}\r\n            style={styles.button}\r\n            onPress={() => handleButtonPress(item)}\r\n          >\r\n            <Text style={styles.buttonText}>{item.label}</Text>\r\n          </TouchableOpacity>\r\n        ))}\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  text: {\r\n    fontSize: 20,\r\n    fontWeight: 'bold',\r\n    marginBottom: 20,\r\n  },\r\n  buttonContainer: {\r\n    width: '80%',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  button: {\r\n    backgroundColor: '#6DB33F', // Use your preferred color\r\n    padding: 15,\r\n    marginVertical: 10,\r\n    width: '100%',\r\n    borderRadius: 8,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  buttonText: {\r\n    color: 'white',\r\n    fontSize: 16,\r\n    fontWeight: 'bold',\r\n  },\r\n});\r\n\r\nexport default HomeServ;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}