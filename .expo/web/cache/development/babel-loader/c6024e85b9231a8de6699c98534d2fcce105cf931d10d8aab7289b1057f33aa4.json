{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Icon from \"@expo/vector-icons/FontAwesome\";\nimport { useNavigation } from '@react-navigation/native';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar LoginScreen = function LoginScreen() {\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    username = _useState2[0],\n    setUsername = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    error = _useState6[0],\n    setError = _useState6[1];\n  var navigation = useNavigation();\n  var handleLogin = function handleLogin() {\n    if (username && password) {\n      navigation.reset({\n        index: 0,\n        routes: [{\n          name: 'Home'\n        }]\n      });\n    } else {\n      setError('Invalid username or password');\n    }\n  };\n  var handleNavigateToRegistration = function handleNavigateToRegistration() {\n    navigation.navigate('Register');\n  };\n  return _jsx(ImageBackground, {\n    source: require(\"../assets/bg.jpg\"),\n    style: styles.backgroundImage,\n    resizeMode: \"cover\",\n    children: _jsx(View, {\n      style: styles.container,\n      children: _jsxs(View, {\n        style: styles.loginBox,\n        children: [_jsx(Text, {\n          style: styles.title,\n          children: \"Login\"\n        }), _jsx(View, {\n          style: styles.profileContainer,\n          children: _jsxs(View, {\n            style: styles.profile,\n            children: [_jsx(Icon, {\n              name: \"user\",\n              size: 40,\n              color: \"black\"\n            }), _jsx(Text, {\n              style: styles.profileText,\n              children: \"Welcome, User!\"\n            })]\n          })\n        }), _jsx(TextInput, {\n          style: [styles.input, styles.roundedInput],\n          placeholder: \"Email\",\n          value: username,\n          onChangeText: setUsername\n        }), _jsx(TextInput, {\n          style: [styles.input, styles.roundedInput],\n          placeholder: \"Password\",\n          secureTextEntry: true,\n          value: password,\n          onChangeText: setPassword\n        }), error ? _jsx(Text, {\n          style: styles.error,\n          children: error\n        }) : null, _jsxs(View, {\n          style: styles.buttonContainer,\n          children: [_jsx(TouchableOpacity, {\n            style: [styles.button, {\n              backgroundColor: 'blue'\n            }],\n            onPress: handleLogin,\n            children: _jsx(Text, {\n              style: [styles.buttonText, {\n                color: 'white'\n              }],\n              children: \"Login\"\n            })\n          }), _jsx(TouchableOpacity, {\n            style: [styles.button, styles.registerButton, {\n              backgroundColor: 'blue'\n            }],\n            onPress: handleNavigateToRegistration,\n            children: _jsx(Text, {\n              style: [styles.buttonText, {\n                color: 'white'\n              }],\n              children: \"Register\"\n            })\n          })]\n        })]\n      })\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  loginBox: {\n    width: '80%',\n    height: 400,\n    padding: 40,\n    borderRadius: 25,\n    backgroundColor: 'rgba(255, 255, 255, 1)',\n    borderColor: 'blue',\n    borderWidth: 2,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.8,\n    shadowRadius: 4,\n    elevation: 5\n  },\n  title: {\n    textAlign: 'center',\n    fontSize: 24,\n    color: 'black',\n    fontWeight: 'bold',\n    marginBottom: 30,\n    fontFamily: 'poppins-medium'\n  },\n  input: {\n    height: 40,\n    width: '100%',\n    borderColor: 'gray',\n    borderWidth: 1,\n    marginBottom: 10,\n    paddingLeft: 10\n  },\n  roundedInput: {\n    borderRadius: 20\n  },\n  error: {\n    color: 'red',\n    marginBottom: 10\n  },\n  buttonContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginTop: 10\n  },\n  button: {\n    borderRadius: 20,\n    paddingVertical: 10,\n    width: '48%'\n  },\n  registerButton: {},\n  buttonText: {\n    textAlign: 'center'\n  },\n  backgroundImage: {\n    flex: 1,\n    width: '100%',\n    height: '100%'\n  },\n  profileContainer: {\n    alignItems: 'center',\n    marginBottom: 20\n  },\n  profile: {\n    alignItems: 'center'\n  },\n  profileText: {\n    marginTop: 10,\n    fontSize: 16,\n    color: 'black'\n  }\n});\nexport default LoginScreen;","map":{"version":3,"names":["React","useState","View","Text","TextInput","StyleSheet","TouchableOpacity","ImageBackground","Icon","useNavigation","jsx","_jsx","jsxs","_jsxs","LoginScreen","_useState","_useState2","_slicedToArray","username","setUsername","_useState3","_useState4","password","setPassword","_useState5","_useState6","error","setError","navigation","handleLogin","reset","index","routes","name","handleNavigateToRegistration","navigate","source","require","style","styles","backgroundImage","resizeMode","children","container","loginBox","title","profileContainer","profile","size","color","profileText","input","roundedInput","placeholder","value","onChangeText","secureTextEntry","buttonContainer","button","backgroundColor","onPress","buttonText","registerButton","create","flex","justifyContent","alignItems","width","height","padding","borderRadius","borderColor","borderWidth","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","textAlign","fontSize","fontWeight","marginBottom","fontFamily","paddingLeft","flexDirection","marginTop","paddingVertical"],"sources":["C:/Users/encog/Desktop/App/src/LoginScreen.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { View, Text, TextInput, StyleSheet, TouchableOpacity, ImageBackground } from 'react-native';\r\nimport Icon from 'react-native-vector-icons/FontAwesome'; // Import the necessary icon\r\nimport { useNavigation } from '@react-navigation/native';\r\n\r\n\r\nconst LoginScreen = () => {\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [error, setError] = useState('');\r\n  const navigation = useNavigation();\r\n\r\n  const handleLogin = () => {\r\n    // Perform login logic here\r\n    if (username && password) {\r\n      // Successful login, navigate to the Home screen and reset the navigation state\r\n      navigation.reset({\r\n        index: 0,\r\n        routes: [{ name: 'Home' }],\r\n      });\r\n    } else {\r\n      setError('Invalid username or password');\r\n    }\r\n  };\r\n\r\n  const handleNavigateToRegistration = () => {\r\n    // Navigate to the registration screen\r\n    navigation.navigate('Register');\r\n  };\r\n\r\n  return (\r\n    <ImageBackground\r\n      source={require('../assets/bg.jpg')}\r\n      style={styles.backgroundImage}\r\n      resizeMode=\"cover\"\r\n    >\r\n      <View style={styles.container}>\r\n        <View style={styles.loginBox}>\r\n          <Text style={styles.title}>Login</Text>\r\n          <View style={styles.profileContainer}>\r\n            {/* Profile section */}\r\n            <View style={styles.profile}>\r\n              {/* Add profile icon */}\r\n              <Icon name=\"user\" size={40} color=\"black\" />\r\n              {/* Profile information */}\r\n              <Text style={styles.profileText}>Welcome, User!</Text>\r\n              {/* You can add more details or components here */}\r\n            </View>\r\n          </View>\r\n          <TextInput\r\n            style={[styles.input, styles.roundedInput]}\r\n            placeholder=\"Email\"\r\n            value={username}\r\n            onChangeText={setUsername}\r\n          />\r\n          <TextInput\r\n            style={[styles.input, styles.roundedInput]}\r\n            placeholder=\"Password\"\r\n            secureTextEntry\r\n            value={password}\r\n            onChangeText={setPassword}\r\n          />\r\n          {error ? <Text style={styles.error}>{error}</Text> : null}\r\n          <View style={styles.buttonContainer}>\r\n            <TouchableOpacity\r\n              style={[styles.button, { backgroundColor: 'blue' }]}\r\n              onPress={handleLogin}\r\n            >\r\n              <Text style={[styles.buttonText, { color: 'white' }]}>Login</Text>\r\n            </TouchableOpacity>\r\n            <TouchableOpacity\r\n              style={[styles.button, styles.registerButton, { backgroundColor: 'blue' }]}\r\n              onPress={handleNavigateToRegistration}\r\n            >\r\n              <Text style={[styles.buttonText, { color: 'white' }]}>Register</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n        </View>\r\n      </View>\r\n    </ImageBackground>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  loginBox: {\r\n    width: '80%',\r\n    height: 400,\r\n    padding: 40,\r\n    borderRadius: 25,\r\n    backgroundColor: 'rgba(255, 255, 255, 1)', // Set the alpha value to 0\r\n    borderColor: 'blue',\r\n    borderWidth: 2,\r\n    shadowColor: '#000',\r\n    shadowOffset: { width: 0, height: 2 },\r\n    shadowOpacity: 0.8,\r\n    shadowRadius: 4,\r\n    elevation: 5,\r\n  },\r\n  title: {\r\n    textAlign: 'center',\r\n    fontSize: 24,\r\n    color: 'black',\r\n    fontWeight: 'bold',\r\n    marginBottom: 30,\r\n    fontFamily: 'poppins-medium',\r\n  },\r\n  input: {\r\n    height: 40,\r\n    width: '100%',\r\n    borderColor: 'gray',\r\n    borderWidth: 1,\r\n    marginBottom: 10,\r\n    paddingLeft: 10,\r\n  },\r\n  roundedInput: {\r\n    borderRadius: 20,\r\n  },\r\n  error: {\r\n    color: 'red',\r\n    marginBottom: 10,\r\n  },\r\n  buttonContainer: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    marginTop: 10,\r\n  },\r\n  button: {\r\n    borderRadius: 20,\r\n    paddingVertical: 10,\r\n    width: '48%',\r\n  },\r\n  registerButton: {},\r\n  buttonText: {\r\n    textAlign: 'center',\r\n  },\r\n  backgroundImage: {\r\n    flex: 1,\r\n    width: '100%',\r\n    height: '100%',\r\n  },\r\n  profileContainer: {\r\n    alignItems: 'center',\r\n    marginBottom: 20,\r\n  },\r\n  profile: {\r\n    alignItems: 'center',\r\n  },\r\n  profileText: {\r\n    marginTop: 10,\r\n    fontSize: 16,\r\n    color: 'black',\r\n  },\r\n});\r\n\r\nexport default LoginScreen;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,SAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,eAAA;AAExC,OAAOC,IAAI;AACX,SAASC,aAAa,QAAQ,0BAA0B;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAGzD,IAAMC,WAAW,GAAG,SAAdA,WAAWA,CAAA,EAAS;EACxB,IAAAC,SAAA,GAAgCd,QAAQ,CAAC,EAAE,CAAC;IAAAe,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAArCG,QAAQ,GAAAF,UAAA;IAAEG,WAAW,GAAAH,UAAA;EAC5B,IAAAI,UAAA,GAAgCnB,QAAQ,CAAC,EAAE,CAAC;IAAAoB,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAArCE,QAAQ,GAAAD,UAAA;IAAEE,WAAW,GAAAF,UAAA;EAC5B,IAAAG,UAAA,GAA0BvB,QAAQ,CAAC,EAAE,CAAC;IAAAwB,UAAA,GAAAR,cAAA,CAAAO,UAAA;IAA/BE,KAAK,GAAAD,UAAA;IAAEE,QAAQ,GAAAF,UAAA;EACtB,IAAMG,UAAU,GAAGnB,aAAa,CAAC,CAAC;EAElC,IAAMoB,WAAW,GAAG,SAAdA,WAAWA,CAAA,EAAS;IAExB,IAAIX,QAAQ,IAAII,QAAQ,EAAE;MAExBM,UAAU,CAACE,KAAK,CAAC;QACfC,KAAK,EAAE,CAAC;QACRC,MAAM,EAAE,CAAC;UAAEC,IAAI,EAAE;QAAO,CAAC;MAC3B,CAAC,CAAC;IACJ,CAAC,MAAM;MACLN,QAAQ,CAAC,8BAA8B,CAAC;IAC1C;EACF,CAAC;EAED,IAAMO,4BAA4B,GAAG,SAA/BA,4BAA4BA,CAAA,EAAS;IAEzCN,UAAU,CAACO,QAAQ,CAAC,UAAU,CAAC;EACjC,CAAC;EAED,OACExB,IAAA,CAACJ,eAAe;IACd6B,MAAM,EAAEC,OAAO,mBAAmB,CAAE;IACpCC,KAAK,EAAEC,MAAM,CAACC,eAAgB;IAC9BC,UAAU,EAAC,OAAO;IAAAC,QAAA,EAElB/B,IAAA,CAACT,IAAI;MAACoC,KAAK,EAAEC,MAAM,CAACI,SAAU;MAAAD,QAAA,EAC5B7B,KAAA,CAACX,IAAI;QAACoC,KAAK,EAAEC,MAAM,CAACK,QAAS;QAAAF,QAAA,GAC3B/B,IAAA,CAACR,IAAI;UAACmC,KAAK,EAAEC,MAAM,CAACM,KAAM;UAAAH,QAAA,EAAC;QAAK,CAAM,CAAC,EACvC/B,IAAA,CAACT,IAAI;UAACoC,KAAK,EAAEC,MAAM,CAACO,gBAAiB;UAAAJ,QAAA,EAEnC7B,KAAA,CAACX,IAAI;YAACoC,KAAK,EAAEC,MAAM,CAACQ,OAAQ;YAAAL,QAAA,GAE1B/B,IAAA,CAACH,IAAI;cAACyB,IAAI,EAAC,MAAM;cAACe,IAAI,EAAE,EAAG;cAACC,KAAK,EAAC;YAAO,CAAE,CAAC,EAE5CtC,IAAA,CAACR,IAAI;cAACmC,KAAK,EAAEC,MAAM,CAACW,WAAY;cAAAR,QAAA,EAAC;YAAc,CAAM,CAAC;UAAA,CAElD;QAAC,CACH,CAAC,EACP/B,IAAA,CAACP,SAAS;UACRkC,KAAK,EAAE,CAACC,MAAM,CAACY,KAAK,EAAEZ,MAAM,CAACa,YAAY,CAAE;UAC3CC,WAAW,EAAC,OAAO;UACnBC,KAAK,EAAEpC,QAAS;UAChBqC,YAAY,EAAEpC;QAAY,CAC3B,CAAC,EACFR,IAAA,CAACP,SAAS;UACRkC,KAAK,EAAE,CAACC,MAAM,CAACY,KAAK,EAAEZ,MAAM,CAACa,YAAY,CAAE;UAC3CC,WAAW,EAAC,UAAU;UACtBG,eAAe;UACfF,KAAK,EAAEhC,QAAS;UAChBiC,YAAY,EAAEhC;QAAY,CAC3B,CAAC,EACDG,KAAK,GAAGf,IAAA,CAACR,IAAI;UAACmC,KAAK,EAAEC,MAAM,CAACb,KAAM;UAAAgB,QAAA,EAAEhB;QAAK,CAAO,CAAC,GAAG,IAAI,EACzDb,KAAA,CAACX,IAAI;UAACoC,KAAK,EAAEC,MAAM,CAACkB,eAAgB;UAAAf,QAAA,GAClC/B,IAAA,CAACL,gBAAgB;YACfgC,KAAK,EAAE,CAACC,MAAM,CAACmB,MAAM,EAAE;cAAEC,eAAe,EAAE;YAAO,CAAC,CAAE;YACpDC,OAAO,EAAE/B,WAAY;YAAAa,QAAA,EAErB/B,IAAA,CAACR,IAAI;cAACmC,KAAK,EAAE,CAACC,MAAM,CAACsB,UAAU,EAAE;gBAAEZ,KAAK,EAAE;cAAQ,CAAC,CAAE;cAAAP,QAAA,EAAC;YAAK,CAAM;UAAC,CAClD,CAAC,EACnB/B,IAAA,CAACL,gBAAgB;YACfgC,KAAK,EAAE,CAACC,MAAM,CAACmB,MAAM,EAAEnB,MAAM,CAACuB,cAAc,EAAE;cAAEH,eAAe,EAAE;YAAO,CAAC,CAAE;YAC3EC,OAAO,EAAE1B,4BAA6B;YAAAQ,QAAA,EAEtC/B,IAAA,CAACR,IAAI;cAACmC,KAAK,EAAE,CAACC,MAAM,CAACsB,UAAU,EAAE;gBAAEZ,KAAK,EAAE;cAAQ,CAAC,CAAE;cAAAP,QAAA,EAAC;YAAQ,CAAM;UAAC,CACrD,CAAC;QAAA,CACf,CAAC;MAAA,CACH;IAAC,CACH;EAAC,CACQ,CAAC;AAEtB,CAAC;AAED,IAAMH,MAAM,GAAGlC,UAAU,CAAC0D,MAAM,CAAC;EAC/BpB,SAAS,EAAE;IACTqB,IAAI,EAAE,CAAC;IACPC,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE;EACd,CAAC;EACDtB,QAAQ,EAAE;IACRuB,KAAK,EAAE,KAAK;IACZC,MAAM,EAAE,GAAG;IACXC,OAAO,EAAE,EAAE;IACXC,YAAY,EAAE,EAAE;IAChBX,eAAe,EAAE,wBAAwB;IACzCY,WAAW,EAAE,MAAM;IACnBC,WAAW,EAAE,CAAC;IACdC,WAAW,EAAE,MAAM;IACnBC,YAAY,EAAE;MAAEP,KAAK,EAAE,CAAC;MAAEC,MAAM,EAAE;IAAE,CAAC;IACrCO,aAAa,EAAE,GAAG;IAClBC,YAAY,EAAE,CAAC;IACfC,SAAS,EAAE;EACb,CAAC;EACDhC,KAAK,EAAE;IACLiC,SAAS,EAAE,QAAQ;IACnBC,QAAQ,EAAE,EAAE;IACZ9B,KAAK,EAAE,OAAO;IACd+B,UAAU,EAAE,MAAM;IAClBC,YAAY,EAAE,EAAE;IAChBC,UAAU,EAAE;EACd,CAAC;EACD/B,KAAK,EAAE;IACLiB,MAAM,EAAE,EAAE;IACVD,KAAK,EAAE,MAAM;IACbI,WAAW,EAAE,MAAM;IACnBC,WAAW,EAAE,CAAC;IACdS,YAAY,EAAE,EAAE;IAChBE,WAAW,EAAE;EACf,CAAC;EACD/B,YAAY,EAAE;IACZkB,YAAY,EAAE;EAChB,CAAC;EACD5C,KAAK,EAAE;IACLuB,KAAK,EAAE,KAAK;IACZgC,YAAY,EAAE;EAChB,CAAC;EACDxB,eAAe,EAAE;IACf2B,aAAa,EAAE,KAAK;IACpBnB,cAAc,EAAE,eAAe;IAC/BoB,SAAS,EAAE;EACb,CAAC;EACD3B,MAAM,EAAE;IACNY,YAAY,EAAE,EAAE;IAChBgB,eAAe,EAAE,EAAE;IACnBnB,KAAK,EAAE;EACT,CAAC;EACDL,cAAc,EAAE,CAAC,CAAC;EAClBD,UAAU,EAAE;IACViB,SAAS,EAAE;EACb,CAAC;EACDtC,eAAe,EAAE;IACfwB,IAAI,EAAE,CAAC;IACPG,KAAK,EAAE,MAAM;IACbC,MAAM,EAAE;EACV,CAAC;EACDtB,gBAAgB,EAAE;IAChBoB,UAAU,EAAE,QAAQ;IACpBe,YAAY,EAAE;EAChB,CAAC;EACDlC,OAAO,EAAE;IACPmB,UAAU,EAAE;EACd,CAAC;EACDhB,WAAW,EAAE;IACXmC,SAAS,EAAE,EAAE;IACbN,QAAQ,EAAE,EAAE;IACZ9B,KAAK,EAAE;EACT;AACF,CAAC,CAAC;AAEF,eAAenC,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}