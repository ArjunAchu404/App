{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { useNavigation } from '@react-navigation/native';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar LoginScreen = function LoginScreen() {\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    username = _useState2[0],\n    setUsername = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    error = _useState6[0],\n    setError = _useState6[1];\n  var navigation = useNavigation();\n  var handleLogin = function handleLogin() {\n    if (username && password) {\n      navigation.reset({\n        index: 0,\n        routes: [{\n          name: 'Home'\n        }]\n      });\n    } else {\n      setError('Invalid username or password');\n    }\n  };\n  var handleNavigateToRegistration = function handleNavigateToRegistration() {\n    navigation.navigate('Register');\n  };\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsxs(View, {\n      style: styles.loginBox,\n      children: [_jsx(Image, {\n        source: require(\"./path-to-your-google-logo.png\"),\n        style: styles.logo\n      }), _jsx(Text, {\n        style: styles.title,\n        children: \"Login\"\n      }), _jsx(TextInput, {\n        style: styles.input,\n        placeholder: \"Username\",\n        value: username,\n        onChangeText: setUsername\n      }), _jsxs(View, {\n        style: styles.passwordInput,\n        children: [_jsx(TextInput, {\n          style: styles.input,\n          placeholder: \"Password\",\n          secureTextEntry: true,\n          value: password,\n          onChangeText: setPassword\n        }), _jsx(Image, {\n          source: require(\"../a\"),\n          style: styles.lockIcon\n        })]\n      }), error ? _jsx(Text, {\n        style: styles.error,\n        children: error\n      }) : null, _jsxs(View, {\n        style: styles.buttonContainer,\n        children: [_jsx(TouchableOpacity, {\n          style: styles.button,\n          onPress: handleLogin,\n          children: _jsx(Text, {\n            style: styles.buttonText,\n            children: \"Login\"\n          })\n        }), _jsx(TouchableOpacity, {\n          style: [styles.button, styles.registerButton],\n          onPress: handleNavigateToRegistration,\n          children: _jsx(Text, {\n            style: styles.buttonText,\n            children: \"Register\"\n          })\n        })]\n      })]\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#f0f0f0'\n  },\n  loginBox: {\n    width: '80%',\n    padding: 20,\n    borderRadius: 10,\n    backgroundColor: '#fff',\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.8,\n    shadowRadius: 4,\n    elevation: 5,\n    alignItems: 'center'\n  },\n  title: {\n    fontSize: 24,\n    color: '#333',\n    fontWeight: 'bold',\n    marginBottom: 20,\n    textAlign: 'center'\n  },\n  logo: {\n    width: 100,\n    height: 100,\n    marginBottom: 20\n  },\n  input: {\n    height: 40,\n    width: '100%',\n    borderColor: '#ccc',\n    borderWidth: 1,\n    marginBottom: 10,\n    paddingLeft: 10,\n    borderRadius: 5\n  },\n  passwordInput: {\n    position: 'relative'\n  },\n  lockIcon: {\n    position: 'absolute',\n    top: 12,\n    right: 10,\n    width: 20,\n    height: 20\n  },\n  error: {\n    color: 'red',\n    marginBottom: 10,\n    textAlign: 'center'\n  },\n  buttonContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginTop: 10,\n    width: '100%'\n  },\n  button: {\n    backgroundColor: '#4285f4',\n    borderRadius: 5,\n    paddingVertical: 10,\n    width: '48%'\n  },\n  registerButton: {\n    backgroundColor: '#34a853'\n  },\n  buttonText: {\n    color: '#fff',\n    textAlign: 'center'\n  }\n});\nexport default LoginScreen;","map":{"version":3,"names":["React","useState","View","Text","TextInput","StyleSheet","TouchableOpacity","Image","useNavigation","jsx","_jsx","jsxs","_jsxs","LoginScreen","_useState","_useState2","_slicedToArray","username","setUsername","_useState3","_useState4","password","setPassword","_useState5","_useState6","error","setError","navigation","handleLogin","reset","index","routes","name","handleNavigateToRegistration","navigate","style","styles","container","children","loginBox","source","require","logo","title","input","placeholder","value","onChangeText","passwordInput","secureTextEntry","lockIcon","buttonContainer","button","onPress","buttonText","registerButton","create","flex","justifyContent","alignItems","backgroundColor","width","padding","borderRadius","shadowColor","shadowOffset","height","shadowOpacity","shadowRadius","elevation","fontSize","color","fontWeight","marginBottom","textAlign","borderColor","borderWidth","paddingLeft","position","top","right","flexDirection","marginTop","paddingVertical"],"sources":["C:/Users/encog/Desktop/App/src/LoginScreen.js"],"sourcesContent":["// LoginScreen.js\r\nimport React, { useState } from 'react';\r\nimport { View, Text, TextInput, StyleSheet, TouchableOpacity, Image } from 'react-native';\r\nimport { useNavigation } from '@react-navigation/native';\r\n\r\nconst LoginScreen = () => {\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [error, setError] = useState('');\r\n  const navigation = useNavigation();\r\n\r\n  const handleLogin = () => {\r\n    // Perform login logic here\r\n    if (username && password) {\r\n      // Successful login, navigate to the Home screen and reset the navigation state\r\n      navigation.reset({\r\n        index: 0,\r\n        routes: [{ name: 'Home' }],\r\n      });\r\n    } else {\r\n      setError('Invalid username or password');\r\n    }\r\n  };\r\n\r\n  const handleNavigateToRegistration = () => {\r\n    // Navigate to the registration screen\r\n    navigation.navigate('Register');\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={styles.loginBox}>\r\n        <Image\r\n          source={require('./path-to-your-google-logo.png')} // Add the path to your Google logo image\r\n          style={styles.logo}\r\n        />\r\n        <Text style={styles.title}>Login</Text>\r\n        <TextInput\r\n          style={styles.input}\r\n          placeholder=\"Username\"\r\n          value={username}\r\n          onChangeText={setUsername}\r\n        />\r\n        <View style={styles.passwordInput}>\r\n          <TextInput\r\n            style={styles.input}\r\n            placeholder=\"Password\"\r\n            secureTextEntry\r\n            value={password}\r\n            onChangeText={setPassword}\r\n          />\r\n          <Image\r\n            source={require('../a')} // Add the path to your lock icon image\r\n            style={styles.lockIcon}\r\n          />\r\n        </View>\r\n        {error ? <Text style={styles.error}>{error}</Text> : null}\r\n        <View style={styles.buttonContainer}>\r\n          <TouchableOpacity\r\n            style={styles.button} // Use TouchableOpacity instead of Button\r\n            onPress={handleLogin}\r\n          >\r\n            <Text style={styles.buttonText}>Login</Text>\r\n          </TouchableOpacity>\r\n\r\n          {/* Register button */}\r\n          <TouchableOpacity\r\n            style={[styles.button, styles.registerButton]} // Use the same style as the Login button\r\n            onPress={handleNavigateToRegistration}\r\n          >\r\n            <Text style={styles.buttonText}>Register</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundColor: '#f0f0f0', // Set a background color for the container\r\n  },\r\n  loginBox: {\r\n    width: '80%',\r\n    padding: 20,\r\n    borderRadius: 10, // Add border radius for a rounded look\r\n    backgroundColor: '#fff', // Set a white background color\r\n    shadowColor: '#000',\r\n    shadowOffset: { width: 0, height: 2 },\r\n    shadowOpacity: 0.8,\r\n    shadowRadius: 4,\r\n    elevation: 5,\r\n    alignItems: 'center', // Center content horizontally\r\n  },\r\n  title: {\r\n    fontSize: 24,\r\n    color: '#333', // Darken the title color\r\n    fontWeight: 'bold',\r\n    marginBottom: 20,\r\n    textAlign: 'center', // Center the title text\r\n  },\r\n  logo: {\r\n    width: 100,\r\n    height: 100,\r\n    marginBottom: 20,\r\n  },\r\n  input: {\r\n    height: 40,\r\n    width: '100%',\r\n    borderColor: '#ccc', // Lighten the border color\r\n    borderWidth: 1,\r\n    marginBottom: 10,\r\n    paddingLeft: 10,\r\n    borderRadius: 5, // Add border radius to input fields\r\n  },\r\n  passwordInput: {\r\n    position: 'relative',\r\n  },\r\n  lockIcon: {\r\n    position: 'absolute',\r\n    top: 12,\r\n    right: 10,\r\n    width: 20,\r\n    height: 20,\r\n  },\r\n  error: {\r\n    color: 'red',\r\n    marginBottom: 10,\r\n    textAlign: 'center', // Center the error text\r\n  },\r\n  buttonContainer: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    marginTop: 10,\r\n    width: '100%', // Make the button container take the full width\r\n  },\r\n  button: {\r\n    backgroundColor: '#4285f4', // Change the button color\r\n    borderRadius: 5, // Add border radius for a rounded button\r\n    paddingVertical: 10,\r\n    width: '48%',\r\n  },\r\n  registerButton: {\r\n    backgroundColor: '#34a853', // Change the Register button color\r\n  },\r\n  buttonText: {\r\n    color: '#fff',\r\n    textAlign: 'center',\r\n  },\r\n});\r\n\r\nexport default LoginScreen;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}