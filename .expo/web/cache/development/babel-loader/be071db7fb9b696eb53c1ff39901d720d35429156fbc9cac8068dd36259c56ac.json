{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Icon from \"@expo/vector-icons/FontAwesome\";\nimport { useNavigation } from '@react-navigation/native';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar HomeScreen = function HomeScreen() {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isDropdownVisible = _useState2[0],\n    setDropdownVisible = _useState2[1];\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    selectedOption = _useState4[0],\n    setSelectedOption = _useState4[1];\n  var navigation = useNavigation();\n  var dropdownItems = [{\n    label: 'To do list',\n    value: 'option1'\n  }, {\n    label: 'Reminders',\n    value: 'option2'\n  }, {\n    label: 'Family Budget',\n    value: 'option3'\n  }, {\n    label: 'About Us',\n    value: 'option4'\n  }, {\n    label: 'Contact',\n    value: 'option5'\n  }, {\n    label: 'Signout',\n    value: 'option6'\n  }];\n  var gridItems = [{\n    label: 'Home',\n    icon: 'home',\n    value: 'HomeServ'\n  }, {\n    label: 'Knowledge',\n    icon: 'book',\n    value: 'Knowledge'\n  }, {\n    label: 'Professional',\n    icon: 'briefcase',\n    value: 'Professional'\n  }, {\n    label: 'Aware',\n    icon: 'info',\n    value: 'Aware'\n  }, {\n    label: 'Counselling',\n    icon: 'phone-square',\n    value: 'Counselling'\n  }, {\n    label: 'Vehicle',\n    icon: 'car',\n    value: 'Vehicle'\n  }, {\n    label: 'Agri/Vet',\n    icon: 'leaf',\n    value: 'Agric'\n  }, {\n    label: 'Shopping',\n    icon: 'shopping-cart',\n    value: 'Shopping'\n  }, {\n    label: 'Others',\n    icon: 'commenting',\n    value: 'Others'\n  }];\n  var handleIconPress = function handleIconPress() {\n    setDropdownVisible(!isDropdownVisible);\n  };\n  var handleSelect = function handleSelect(item) {\n    setSelectedOption(item.label);\n    setDropdownVisible(false);\n    switch (item.value) {\n      case 'option1':\n        navigation.navigate('ToDoList');\n        break;\n      case 'option2':\n        navigation.navigate('Reminders');\n        break;\n      case 'option6':\n        navigation.reset({\n          index: 0,\n          routes: [{\n            name: 'Login'\n          }]\n        });\n        break;\n      default:\n        navigation.navigate(item.value);\n        break;\n    }\n  };\n  var closeDropdown = function closeDropdown() {\n    setDropdownVisible(false);\n  };\n  var renderDropdown = function renderDropdown() {\n    return _jsx(View, {\n      style: styles.dropdown,\n      children: dropdownItems.map(function (item) {\n        return _jsx(TouchableOpacity, {\n          style: styles.dropdownItem,\n          onPress: function onPress() {\n            return handleSelect(item);\n          },\n          children: _jsx(Text, {\n            children: item.label\n          })\n        }, item.value);\n      })\n    });\n  };\n  var renderGridItem = function renderGridItem(_ref) {\n    var item = _ref.item;\n    return _jsxs(TouchableOpacity, {\n      style: styles.gridItem,\n      onPress: function onPress() {\n        return handleSelect(item);\n      },\n      children: [_jsx(Icon, {\n        name: item.icon,\n        size: 30,\n        color: \"#000\",\n        style: styles.gridIcon\n      }), _jsx(Text, {\n        style: styles.gridLabel,\n        children: item.label\n      })]\n    });\n  };\n  return _jsx(TouchableWithoutFeedback, {\n    onPress: closeDropdown,\n    children: _jsxs(View, {\n      style: styles.container,\n      children: [_jsxs(View, {\n        style: styles.header,\n        children: [_jsx(TouchableOpacity, {\n          onPress: handleIconPress,\n          children: _jsx(Icon, {\n            name: \"caret-down\",\n            size: 30,\n            color: \"#000\",\n            style: styles.icon\n          })\n        }), _jsx(Text, {\n          style: styles.userName,\n          children: \"John Doe\"\n        })]\n      }), isDropdownVisible && renderDropdown(), _jsx(FlatList, {\n        data: gridItems,\n        renderItem: renderGridItem,\n        keyExtractor: function keyExtractor(item, index) {\n          return index.toString();\n        },\n        numColumns: 3,\n        style: styles.grid\n      })]\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 20\n  },\n  header: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 20,\n    marginTop: 30\n  },\n  icon: {\n    marginRight: 10\n  },\n  userName: {\n    fontSize: 16,\n    fontWeight: 'bold'\n  },\n  dropdown: {\n    position: 'absolute',\n    top: 60,\n    left: 10,\n    backgroundColor: 'white',\n    borderRadius: 5,\n    elevation: 3,\n    zIndex: 1\n  },\n  dropdownItem: {\n    padding: 10,\n    borderBottomWidth: 1,\n    borderBottomColor: '#ccc'\n  },\n  grid: {\n    marginTop: 10\n  },\n  gridItem: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 10,\n    borderWidth: 1,\n    borderColor: '#ccc',\n    borderRadius: 5,\n    margin: 5\n  },\n  gridIcon: {\n    marginBottom: 5\n  },\n  gridLabel: {\n    fontSize: 12\n  }\n});\nexport default HomeScreen;","map":{"version":3,"names":["React","useState","View","Text","StyleSheet","TouchableOpacity","TouchableWithoutFeedback","FlatList","Icon","useNavigation","jsx","_jsx","jsxs","_jsxs","HomeScreen","_useState","_useState2","_slicedToArray","isDropdownVisible","setDropdownVisible","_useState3","_useState4","selectedOption","setSelectedOption","navigation","dropdownItems","label","value","gridItems","icon","handleIconPress","handleSelect","item","navigate","reset","index","routes","name","closeDropdown","renderDropdown","style","styles","dropdown","children","map","dropdownItem","onPress","renderGridItem","_ref","gridItem","size","color","gridIcon","gridLabel","container","header","userName","data","renderItem","keyExtractor","toString","numColumns","grid","create","flex","padding","flexDirection","justifyContent","alignItems","marginBottom","marginTop","marginRight","fontSize","fontWeight","position","top","left","backgroundColor","borderRadius","elevation","zIndex","borderBottomWidth","borderBottomColor","borderWidth","borderColor","margin"],"sources":["C:/Users/shiji/Documents/GitHub/App-original/src/HomeScreen.js"],"sourcesContent":["// HomeScreen.js\r\nimport React, { useState } from 'react';\r\nimport { View, Text, StyleSheet, TouchableOpacity, TouchableWithoutFeedback, FlatList } from 'react-native';\r\nimport Icon from 'react-native-vector-icons/FontAwesome';\r\nimport { useNavigation } from '@react-navigation/native';\r\n\r\nconst HomeScreen = () => {\r\n  const [isDropdownVisible, setDropdownVisible] = useState(false);\r\n  const [selectedOption, setSelectedOption] = useState(null);\r\n  const navigation = useNavigation();\r\n\r\n  const dropdownItems = [\r\n    { label: 'To do list', value: 'option1' },\r\n    { label: 'Reminders', value: 'option2' },\r\n    { label: 'Family Budget', value: 'option3' },\r\n    { label: 'About Us', value: 'option4' },\r\n    { label: 'Contact', value: 'option5' },\r\n    { label: 'Signout', value: 'option6' }\r\n  ];\r\n\r\n  const gridItems = [\r\n    { label: 'Home', icon: 'home', value: 'HomeServ' }, // Changed icon to 'home'\r\n    { label: 'Knowledge', icon: 'book', value: 'Knowledge' }, // Changed icon to 'book'\r\n    { label: 'Professional', icon: 'briefcase', value: 'Professional' }, // Changed icon to 'briefcase'\r\n    { label: 'Aware', icon: 'info', value: 'Aware' }, // Changed icon to 'info'\r\n    { label: 'Counselling', icon: 'phone-square', value: 'Counselling' }, // Changed icon to 'phone-square'\r\n    { label: 'Vehicle', icon: 'car', value: 'Vehicle' }, // Changed icon to 'car'\r\n    { label: 'Agri/Vet', icon: 'leaf', value: 'Agric' }, // Changed icon to 'leaf'\r\n    { label: 'Shopping', icon: 'shopping-cart', value: 'Shopping' }, // Changed icon to 'shopping-cart'\r\n    { label: 'Others', icon: 'commenting', value: 'Others' }, // Changed icon to 'commenting'\r\n  ];\r\n\r\n  const handleIconPress = () => {\r\n    setDropdownVisible(!isDropdownVisible);\r\n  };\r\n\r\n  const handleSelect = (item) => {\r\n    setSelectedOption(item.label);\r\n    setDropdownVisible(false);\r\n\r\n    // Perform navigation based on the selected option\r\n    switch (item.value) {\r\n      case 'option1':\r\n        navigation.navigate('ToDoList');\r\n        break;\r\n      case 'option2':\r\n        navigation.navigate('Reminders');\r\n        break;\r\n        \r\n      case 'option6':\r\n        // Sign out logic\r\n        // For simplicity, you can navigate back to the login screen\r\n        navigation.reset({\r\n          index: 0,\r\n          routes: [{ name: 'Login' }],\r\n        });\r\n        break;\r\n      default:\r\n        navigation.navigate(item.value);\r\n        break;\r\n    }\r\n  };\r\n\r\n  const closeDropdown = () => {\r\n    setDropdownVisible(false);\r\n  };\r\n\r\n  const renderDropdown = () => (\r\n    <View style={styles.dropdown}>\r\n      {dropdownItems.map((item) => (\r\n        <TouchableOpacity\r\n          key={item.value}\r\n          style={styles.dropdownItem}\r\n          onPress={() => handleSelect(item)}\r\n        >\r\n          <Text>{item.label}</Text>\r\n        </TouchableOpacity>\r\n      ))}\r\n    </View>\r\n  );\r\n\r\n  const renderGridItem = ({ item }) => (\r\n    <TouchableOpacity style={styles.gridItem} onPress={() => handleSelect(item)}>\r\n      <Icon name={item.icon} size={30} color=\"#000\" style={styles.gridIcon} />\r\n      <Text style={styles.gridLabel}>{item.label}</Text>\r\n    </TouchableOpacity>\r\n  );\r\n\r\n  return (\r\n    <TouchableWithoutFeedback onPress={closeDropdown}>\r\n      <View style={styles.container}>\r\n        <View style={styles.header}>\r\n          <TouchableOpacity onPress={handleIconPress}>\r\n            <Icon name=\"caret-down\" size={30} color=\"#000\" style={styles.icon} />\r\n          </TouchableOpacity>\r\n          <Text style={styles.userName}>John Doe</Text>\r\n        </View>\r\n\r\n        {isDropdownVisible && renderDropdown()}\r\n\r\n        <FlatList\r\n          data={gridItems}\r\n          renderItem={renderGridItem}\r\n          keyExtractor={(item, index) => index.toString()}\r\n          numColumns={3}\r\n          style={styles.grid}\r\n        />\r\n      </View>\r\n    </TouchableWithoutFeedback>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    padding: 20,\r\n  },\r\n  header: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    marginBottom: 20,\r\n    marginTop: 30,\r\n  },\r\n  icon: {\r\n    marginRight: 10,\r\n  },\r\n  userName: {\r\n    fontSize: 16,\r\n    fontWeight: 'bold',\r\n  },\r\n  dropdown: {\r\n    position: 'absolute',\r\n    top: 60,\r\n    left: 10,\r\n    backgroundColor: 'white',\r\n    borderRadius: 5,\r\n    elevation: 3,\r\n    zIndex: 1,\r\n  },\r\n  dropdownItem: {\r\n    padding: 10,\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: '#ccc',\r\n  },\r\n  grid: {\r\n    marginTop: 10,\r\n  },\r\n  gridItem: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    padding: 10,\r\n    borderWidth: 1,\r\n    borderColor: '#ccc',\r\n    borderRadius: 5,\r\n    margin: 5,\r\n  },\r\n  gridIcon: {\r\n    marginBottom: 5,\r\n  },\r\n  gridLabel: {\r\n    fontSize: 12,\r\n  },\r\n});\r\n\r\nexport default HomeScreen;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}