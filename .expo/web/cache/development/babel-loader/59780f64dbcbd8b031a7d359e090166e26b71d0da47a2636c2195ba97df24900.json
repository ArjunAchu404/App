{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { useNavigation } from '@react-navigation/native';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar LoginScreen = function LoginScreen() {\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    username = _useState2[0],\n    setUsername = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    error = _useState6[0],\n    setError = _useState6[1];\n  var navigation = useNavigation();\n  var handleLogin = function handleLogin() {\n    if (username && password) {\n      navigation.reset({\n        index: 0,\n        routes: [{\n          name: 'Home'\n        }]\n      });\n    } else {\n      setError('Invalid username or password');\n    }\n  };\n  var handleNavigateToRegistration = function handleNavigateToRegistration() {\n    navigation.navigate('Register');\n  };\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsxs(View, {\n      style: styles.loginBox,\n      children: [_jsx(Text, {\n        style: styles.title,\n        children: \"Login\"\n      }), _jsx(TextInput, {\n        style: styles.input,\n        placeholder: \"Email\",\n        value: username,\n        onChangeText: setUsername\n      }), _jsx(TextInput, {\n        style: styles.input,\n        placeholder: \"Password\",\n        secureTextEntry: true,\n        value: password,\n        onChangeText: setPassword\n      }), error ? _jsx(Text, {\n        style: styles.error,\n        children: error\n      }) : null, _jsxs(View, {\n        style: styles.buttonContainer,\n        children: [_jsx(TouchableOpacity, {\n          style: [styles.button, {\n            backgroundColor: '#3498db'\n          }],\n          onPress: handleLogin,\n          children: _jsx(Text, {\n            style: [styles.buttonText, {\n              color: 'aqua'\n            }],\n            children: \"Login\"\n          })\n        }), _jsx(TouchableOpacity, {\n          style: [styles.button, styles.registerButton, {\n            backgroundColor: '#2ecc71'\n          }],\n          onPress: handleNavigateToRegistration,\n          children: _jsx(Text, {\n            style: [styles.buttonText, {\n              color: 'aqua'\n            }],\n            children: \"Register\"\n          })\n        })]\n      })]\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  loginBox: {\n    width: '80%',\n    height: 400,\n    padding: 40,\n    borderRadius: 0,\n    backgroundColor: 'white',\n    borderColor: 'black',\n    borderWidth: 2,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.8,\n    shadowRadius: 4,\n    elevation: 5\n  },\n  title: {\n    textAlign: 'center',\n    fontSize: 24,\n    color: 'black',\n    fontWeight: 'bold',\n    marginBottom: 30,\n    fontFamily: 'poppins-medium'\n  },\n  input: {\n    height: 40,\n    width: '100%',\n    borderColor: 'gray',\n    borderWidth: 1,\n    marginBottom: 10,\n    paddingLeft: 10\n  },\n  error: {\n    color: 'red',\n    marginBottom: 10\n  },\n  newUserButton: {\n    color: 'blue',\n    marginTop: 10\n  },\n  buttonContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginTop: 10\n  },\n  button: {\n    borderRadius: 20,\n    paddingVertical: 10,\n    width: '48%'\n  },\n  registerButton: {},\n  buttonText: {\n    textAlign: 'center'\n  }\n});\nexport default LoginScreen;","map":{"version":3,"names":["React","useState","View","Text","TextInput","StyleSheet","TouchableOpacity","useNavigation","jsx","_jsx","jsxs","_jsxs","LoginScreen","_useState","_useState2","_slicedToArray","username","setUsername","_useState3","_useState4","password","setPassword","_useState5","_useState6","error","setError","navigation","handleLogin","reset","index","routes","name","handleNavigateToRegistration","navigate","style","styles","container","children","loginBox","title","input","placeholder","value","onChangeText","secureTextEntry","buttonContainer","button","backgroundColor","onPress","buttonText","color","registerButton","create","flex","justifyContent","alignItems","width","height","padding","borderRadius","borderColor","borderWidth","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","textAlign","fontSize","fontWeight","marginBottom","fontFamily","paddingLeft","newUserButton","marginTop","flexDirection","paddingVertical"],"sources":["C:/Users/encog/Desktop/App/src/LoginScreen.js"],"sourcesContent":["// LoginScreen.js\r\nimport React, { useState } from 'react';\r\nimport { View, Text, TextInput, StyleSheet, TouchableOpacity } from 'react-native';\r\nimport { useNavigation } from '@react-navigation/native';\r\n\r\nconst LoginScreen = () => {\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [error, setError] = useState('');\r\n  const navigation = useNavigation();\r\n\r\n  const handleLogin = () => {\r\n    // Perform login logic here\r\n    if (username && password) {\r\n      // Successful login, navigate to the Home screen and reset the navigation state\r\n      navigation.reset({\r\n        index: 0,\r\n        routes: [{ name: 'Home' }],\r\n      });\r\n    } else {\r\n      setError('Invalid username or password');\r\n    }\r\n  };\r\n\r\n  const handleNavigateToRegistration = () => {\r\n    // Navigate to the registration screen\r\n    navigation.navigate('Register');\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={styles.loginBox}>\r\n        <Text style={styles.title}>Login</Text>\r\n        <TextInput\r\n          style={styles.input}\r\n          placeholder=\"Email\"\r\n          value={username}\r\n          onChangeText={setUsername}\r\n        />\r\n        <TextInput\r\n          style={styles.input}\r\n          placeholder=\"Password\"\r\n          secureTextEntry\r\n          value={password}\r\n          onChangeText={setPassword}\r\n        />\r\n        {error ? <Text style={styles.error}>{error}</Text> : null}\r\n        <View style={styles.buttonContainer}>\r\n          <TouchableOpacity\r\n            style={[styles.button, { backgroundColor: '#3498db' }]} // Change the button color\r\n            onPress={handleLogin}\r\n          >\r\n            <Text style={[styles.buttonText, { color: 'aqua' }]}>Login</Text>\r\n          </TouchableOpacity>\r\n\r\n          {/* Register button */}\r\n          <TouchableOpacity\r\n            style={[styles.button, styles.registerButton, { backgroundColor: '#2ecc71' }]} // Change the button color\r\n            onPress={handleNavigateToRegistration}\r\n          >\r\n            <Text style={[styles.buttonText, { color: 'aqua' }]}>Register</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  loginBox: {\r\n    width: '80%',\r\n    height: 400,\r\n    padding: 40,\r\n    borderRadius: 0,\r\n    backgroundColor: 'white',\r\n    borderColor: 'black',\r\n    borderWidth: 2,\r\n    shadowColor: '#000',\r\n    shadowOffset: { width: 0, height: 2 },\r\n    shadowOpacity: 0.8,\r\n    shadowRadius: 4,\r\n    elevation: 5,\r\n  },\r\n  title: {\r\n    textAlign: 'center',\r\n    fontSize: 24,\r\n    color: 'black',\r\n    fontWeight: 'bold',\r\n    marginBottom: 30,\r\n    fontFamily: 'poppins-medium',\r\n  },\r\n  input: {\r\n    height: 40,\r\n    width: '100%',\r\n    borderColor: 'gray',\r\n    borderWidth: 1,\r\n    marginBottom: 10,\r\n    paddingLeft: 10,\r\n  },\r\n  error: {\r\n    color: 'red',\r\n    marginBottom: 10,\r\n  },\r\n  newUserButton: {\r\n    color: 'blue',\r\n    marginTop: 10,\r\n  },\r\n  buttonContainer: {\r\n    flexDirection: 'row', // Align buttons in a row\r\n    justifyContent: 'space-between', // Add space between buttons\r\n    marginTop: 10,\r\n  },\r\n  button: {\r\n    borderRadius: 20, // Set the border radius to make the button rounded\r\n    paddingVertical: 10,\r\n    width: '48%', // Adjust the width as needed\r\n  },\r\n  registerButton: {\r\n     // Set a different color for the Register button\r\n  },\r\n  buttonText: {\r\n    textAlign: 'center',\r\n  },\r\n});\r\n\r\nexport default LoginScreen;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}