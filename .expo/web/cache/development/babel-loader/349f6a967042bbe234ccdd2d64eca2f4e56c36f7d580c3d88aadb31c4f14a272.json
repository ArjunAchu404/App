{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar RegisterScreen = function RegisterScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    username = _useState2[0],\n    setUsername = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    confirmPassword = _useState6[0],\n    setConfirmPassword = _useState6[1];\n  var _useState7 = useState(''),\n    _useState8 = _slicedToArray(_useState7, 2),\n    error = _useState8[0],\n    setError = _useState8[1];\n  useEffect(function () {\n    if (error === 'Registration successful!') {\n      navigation.navigate('Login');\n    }\n  }, [error, navigation]);\n  var handleRegister = function handleRegister() {\n    if (username && password && confirmPassword) {\n      if (password === confirmPassword) {\n        setError('Registration successful!');\n      } else {\n        setError('Password and Confirm Password do not match');\n      }\n    } else {\n      setError('Please fill in all fields');\n    }\n  };\n  var navigateToLogin = function navigateToLogin() {\n    navigation.navigate('Login');\n  };\n  return _jsx(ImageBackground, {\n    source: require('path/to/your/background/image.jpg'),\n    style: styles.backgroundImage,\n    children: _jsx(View, {\n      style: styles.container,\n      children: _jsx(TouchableOpacity, {\n        style: [styles.button, {\n          backgroundColor: 'blue'\n        }],\n        onPress: handleRegister,\n        children: _jsx(Text, {\n          style: [styles.buttonText, {\n            color: 'white'\n          }],\n          children: \"Register\"\n        })\n      })\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  backgroundImage: {\n    flex: 1,\n    resizeMode: 'cover',\n    justifyContent: 'center'\n  },\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  button: {\n    backgroundColor: 'blue',\n    padding: 10,\n    borderRadius: 20,\n    width: '80%'\n  },\n  buttonText: {\n    color: 'white',\n    fontSize: 18,\n    fontWeight: 'bold',\n    textAlign: 'center'\n  }\n});\nexport default RegisterScreen;","map":{"version":3,"names":["React","useState","useEffect","View","Text","TextInput","TouchableOpacity","ImageBackground","StyleSheet","jsx","_jsx","RegisterScreen","_ref","navigation","_useState","_useState2","_slicedToArray","username","setUsername","_useState3","_useState4","password","setPassword","_useState5","_useState6","confirmPassword","setConfirmPassword","_useState7","_useState8","error","setError","navigate","handleRegister","navigateToLogin","source","require","style","styles","backgroundImage","children","container","button","backgroundColor","onPress","buttonText","color","create","flex","resizeMode","justifyContent","alignItems","padding","borderRadius","width","fontSize","fontWeight","textAlign"],"sources":["C:/Users/agnel/OneDrive/Documents/GitHub/Login/src/RegisterScreen.js"],"sourcesContent":["// RegisterScreen.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport { View, Text, TextInput, TouchableOpacity, ImageBackground, StyleSheet } from 'react-native';\r\n\r\nconst RegisterScreen = ({ navigation }) => {\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [error, setError] = useState('');\r\n\r\n  useEffect(() => {\r\n    if (error === 'Registration successful!') {\r\n      // Redirect to the 'Login' screen after a successful registration\r\n      // Replace 'Login' with the name of your login screen\r\n      navigation.navigate('Login');\r\n    }\r\n  }, [error, navigation]);\r\n\r\n  const handleRegister = () => {\r\n    // Perform registration logic here\r\n    // For simplicity, let's check if username, password, and confirmPassword are non-empty\r\n    if (username && password && confirmPassword) {\r\n      // Check if password and confirmPassword match\r\n      if (password === confirmPassword) {\r\n        // Registration successful, you can add your registration logic here\r\n        // For this example, let's just display a success message\r\n        setError('Registration successful!');\r\n      } else {\r\n        setError('Password and Confirm Password do not match');\r\n      }\r\n    } else {\r\n      setError('Please fill in all fields');\r\n    }\r\n  };\r\n\r\n  const navigateToLogin = () => {\r\n    // Navigate to the 'Login' screen\r\n    // Replace 'Login' with the name of your login screen\r\n    navigation.navigate('Login');\r\n  };\r\n\r\n  return (\r\n    <ImageBackground\r\n      source={require('path/to/your/background/image.jpg')} // Replace with the actual path to your image\r\n      style={styles.backgroundImage}\r\n    >\r\n      <View style={styles.container}>\r\n        <TouchableOpacity\r\n          style={[styles.button, { backgroundColor: 'blue' }]}\r\n          onPress={handleRegister}\r\n        >\r\n          <Text style={[styles.buttonText, { color: 'white' }]}>Register</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n    </ImageBackground>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  backgroundImage: {\r\n    flex: 1,\r\n    resizeMode: 'cover', // or 'stretch'\r\n    justifyContent: 'center',\r\n  },\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  button: {\r\n    backgroundColor: 'blue',\r\n    padding: 10,\r\n    borderRadius: 20, // Adjust the value to change the roundness of the edges\r\n    width: '80%', // Adjust the value to extend or reduce the width\r\n  },\r\n  buttonText: {\r\n    color: 'white',\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n    textAlign: 'center',\r\n  },\r\n});\r\n\r\nexport default RegisterScreen;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}